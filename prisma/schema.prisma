generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model ProfileLink {
  id        Int          @id @default(autoincrement())
  provider  LinkProvider
  url       String
  profileId Int
  profile   Profile      @relation(fields: [profileId], references: [id])
}

model Profile {
  id          Int           @id @default(autoincrement())
  role        Role          @default(GUEST)
  fullName    String
  avatar      String
  bio         String?
  preferences Json          @default("{}")
  owner       User?         @relation(fields: [ownerId], references: [id])
  ownerId     Int?
  links       ProfileLink[]

  @@map("profiles")
}

model User {
  id            Int       @id @default(autoincrement())
  name          String?
  email         String?   @unique
  emailVerified DateTime? @map(name: "email_verified")
  image         String?
  createdAt     DateTime  @default(now()) @map("created_at")
  updatedAt     DateTime  @updatedAt @map("updated_at")
  confirmed     Boolean   @default(false)
  profile       Profile?

  @@map("users")
}

model Account {
  id                 Int       @id @default(autoincrement())
  compoundId         String    @unique @map(name: "compound_id")
  userId             Int       @map(name: "user_id")
  providerType       String    @map(name: "provider_type")
  providerId         String    @map(name: "provider_id")
  providerAccountId  String    @map(name: "provider_account_id")
  refreshToken       String?   @map(name: "refresh_token")
  accessToken        String?   @map(name: "access_token")
  accessTokenExpires DateTime? @map(name: "access_token_expires")
  createdAt          DateTime  @default(now()) @map(name: "created_at")
  updatedAt          DateTime  @default(now()) @map(name: "updated_at")

  @@index([providerAccountId], name: "providerAccountId")
  @@index([providerId], name: "providerId")
  @@index([userId], name: "userId")
  @@map(name: "accounts")
}

model Session {
  id           Int      @id @default(autoincrement())
  userId       Int      @map(name: "user_id")
  expires      DateTime
  sessionToken String   @unique @map(name: "session_token")
  accessToken  String   @unique @map(name: "access_token")
  createdAt    DateTime @default(now()) @map(name: "created_at")
  updatedAt    DateTime @default(now()) @map(name: "updated_at")

  @@map(name: "sessions")
}

enum Role {
  SUPERADMIN
  ADMIN
  MENTOR
  USER
  GUEST
}

enum LinkProvider {
  FACEBOOK
  GOOGLE
  LINKEDIN
  TWITTER
  INSTAGRAM
  GITHUB
}
